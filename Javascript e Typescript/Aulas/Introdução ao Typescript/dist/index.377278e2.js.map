{"mappings":"","sources":["src/index.ts"],"sourcesContent":["/* ESPECIFICAÇÃO DE TIPAGEM\r\n\r\nfunction soma(a:number,b: number){\r\n  return a + b;\r\n}\r\n\r\nsoma(\"a\", \"b\") */\r\n\r\n/* INTERFACE\r\n\r\ninterface IAnimal {\r\n  nome: string;\r\n  tipo: \"terrestre\" | \"aquático\";\r\n  executarRugido(alturaEmDecibeis: number): void;\r\n}\r\n\r\ninterface IFelino extends IAnimal {\r\n  visaoNoturna: boolean;\r\n}\r\n\r\nconst animal: IAnimal = {\r\n  nome: \"Elefante\",\r\n  tipo: \"terrestre\",\r\n  executarRugido: (alturaEmDecibeis) => (`${alturaEmDecibeis}dB`)\r\n}\r\n\r\nanimal.executarRugido(\"s\")\r\n\r\nconst felino: IFelino = {\r\n  nome: \"Leão\",\r\n  tipo: \"terrestre\",\r\n  visaoNoturna: true,\r\n}\r\n\r\n*/\r\n\r\n/* TYPES\r\n\r\ntype IAnimal = {\r\n  nome: string;\r\n  tipo: \"terrestre\" | \"aquático\";\r\n  domestico: boolean;\r\n}\r\n\r\ninterface IFelino extends IAnimal {\r\n  visaoNoturna: boolean;\r\n}\r\n\r\ninterface ICanino extends IAnimal {\r\n  porte: \"pequeno\" |\"medio\" | \"grande\",\r\n}\r\n\r\ntype IDomestico = IFelino | ICanino;\r\n\r\nconst animal: IDomestico = {\r\n  domestico: true,\r\n  nome: \"cachorro\",\r\n  porte: \"medio\",\r\n  tipo: \"terrestre\",\r\n}\r\n*/\r\n\r\n/* AS\r\n\r\nconst input = document.getElementById(\"input\") as HTMLInputElement;\r\n\r\ninput.addEventListener(\"input\", (event) => {\r\n  const i = event.currentTarget as HTMLInputElement;\r\n  console.log(i.value);\r\n});\r\n\r\n*/\r\n\r\n/*GENERIC TYPES\r\n\r\nfunction adicionaApendiceALista<T>(array: T[], valor: T) {\r\n  return array.map(() => valor);\r\n}\r\n\r\nadicionaApendiceALista([1, 2, 3], \"d\");\r\n\r\n*/\r\n\r\n/* IN\r\n\r\n  interface IUsuario {\r\n    id: string;\r\n    email: string;\r\n  }\r\n\r\n  interface IAdmin extends IUsuario {\r\n    cargo: \"gerente\" | \"coordenador\" | \"supervisor\";\r\n  }\r\n\r\n  function redirecione(usuario: IUsuario | IAdmin) {\r\n    if (\"cargo\" in usuario) {\r\n      //redirecionar para a área de administração\r\n    }\r\n\r\n    //redirecionar para a área de usuário\r\n\r\n  }\r\n\r\n  */\r\n\r\n  /* USANDO OPCIONAIS \"?\"\r\n\r\n  interface IUsuario {\r\n    id: string;\r\n    email: string;\r\n    cargo?: \"gerente\" | \"coordenador\" | \"supervisor\" | \"funcionario\";\r\n  }\r\n\r\n  function redirecione(usuario: IUsuario | IAdmin) {\r\n    if (usuario.cargo) {\r\n      //redirecionar(usuario.cargo)\r\n    }\r\n\r\n    //redirecionar para a área do usuário\r\n  }\r\n*/\r\n\r\n/*RECURSO READONLY\r\n\r\ninterface Cachorro {\r\n  nome: string;\r\n  idade: number;\r\n  parqueFavorito?: string;\r\n}\r\n\r\ntype CachorroSomenteLeitura = {\r\n  readonly [K in keyof Cachorro]-?: Cachorro[K];\r\n}\r\n\r\nclass MeuCachorro implements Cachorro {\r\n  idade;\r\n  nome;\r\n\r\n  constructor(nome, idade) {\r\n    this.nome = nome;\r\n    this.idade = idade;\r\n  }\r\n}\r\n\r\nconst cao = new MeuCachorro(\"Apolo\", 14);\r\n\r\n*/\r\n\r\n"],"names":[],"version":3,"file":"index.377278e2.js.map","sourceRoot":"/__parcel_source_root/"}